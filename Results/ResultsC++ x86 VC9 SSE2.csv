Test name                                , #,Average,First ,Max   ,Min   ,Std.Dev,Comment        
Big int custom HT: 1 Adding items        , 8,  0.372, 0.484, 0.484, 0.343,  0.045,               
Big int custom HT: 2 Running queries     , 8,  0.084, 0.078, 0.094, 0.078,  0.008,50% misses     
Big int custom HT: 3 Removing items      , 8,  0.127, 0.125, 0.140, 0.124,  0.005,5000000 removed
Big int hashtable: 1 Adding items        , 5,  3.345, 3.261, 3.386, 3.261,  0.049,               
Big int hashtable: 2 Running queries     , 5,  0.571, 0.562, 0.655, 0.546,  0.047,50% misses     
Big int hashtable: 3 Removing items      , 5,  1.828, 1.778, 2.059, 1.748,  0.130,5000000 removed
Big int sorted map: 1 Adding items       , 8,  2.906, 2.886, 2.949, 2.870,  0.031,               
Big int sorted map: 2 Running queries    , 8,  0.807, 0.796, 0.889, 0.780,  0.035,50% misses     
Big int sorted map: 3 Removing items     , 8,  1.958, 1.950, 2.075, 1.934,  0.048,5000000 removed
Big string custom HT: 0 Ints to strings  , 4,  1.135, 1.138, 1.139, 1.123,  0.008,               
Big string custom HT: 1 Adding/setting   , 4,  6.950, 7.956, 7.956, 6.521,  0.675,               
Big string custom HT: 2 Running queries  , 4,  2.948, 2.933, 2.995, 2.917,  0.034,50% misses     
Big string custom HT: 3 Removing items   , 4,  4.493, 4.446, 4.586, 4.446,  0.066,5000000 removed
Big string hashtable: 0 Ints to strings  , 4,  1.127, 1.123, 1.139, 1.123,  0.008,               
Big string hashtable: 1 Adding/setting   , 4, 11.181,10.951,11.419,10.951,  0.196,               
Big string hashtable: 2 Running queries  , 4,  3.487, 3.464, 3.525, 3.464,  0.026,50% misses     
Big string hashtable: 3 Removing items   , 4,  4.501, 4.446, 4.587, 4.446,  0.061,5000000 removed
Generic sum: double                      ,10,  0.042, 0.032, 0.047, 0.031,  0.007,    89239683200
Generic sum: FPI8                        ,10,  0.045, 0.046, 0.047, 0.031,  0.005,    89239683200
Generic sum: int                         ,10,  0.047, 0.047, 0.047, 0.046,  0.000,    89239683200
Generic sum: int without template        ,10,  0.047, 0.046, 0.047, 0.046,  0.001,    89239683200
Matrix multiply: <double>[n*n]           , 5,  1.332, 1.326, 1.342, 1.326,  0.008,-95583583333300
Matrix multiply: <float>[n*n]            , 5,  0.930, 0.936, 0.936, 0.920,  0.009,-95583591202816
Matrix multiply: <int>[n*n]              , 5,  1.092, 1.092, 1.092, 1.092,  0.000,      913839180
Matrix multiply: double[n*n]             , 5,  1.335, 1.311, 1.342, 1.311,  0.014,     -95.583583
Polynomials                              , 5,  4.749, 4.758, 4.758, 4.727,  0.014,21677722.000000
Simple arithmetic: double                , 5,  3.020, 3.027, 3.027, 3.011,  0.009,               
Simple arithmetic: float                 , 5,  0.490, 0.499, 0.499, 0.483,  0.008,               
Simple arithmetic: FPI8                  , 5,  0.430, 0.421, 0.437, 0.421,  0.008,               
Simple arithmetic: FPL16                 , 5,  2.209, 2.215, 2.216, 2.199,  0.009,               
Simple arithmetic: Int                   , 5,  0.331, 0.328, 0.343, 0.327,  0.007,               
Simple arithmetic: Int64                 , 5,  1.554, 1.560, 1.560, 1.545,  0.008,               
Simple parsing: 1 Read to end (FILE* x20), 5,  0.022, 0.016, 0.031, 0.016,  0.008,               
Simple parsing: 1 Read to end (ifstr.x20), 5,  0.028, 0.031, 0.031, 0.016,  0.007,               
Simple parsing: 2 Read lines (FILE* x20) , 5,  0.193, 0.203, 0.203, 0.187,  0.009,               
Simple parsing: 2 Read lines (ifstr.x20) , 5,  0.440, 0.437, 0.452, 0.437,  0.007,               
Simple parsing: 3 Parse (x20)            , 5,  0.231, 0.234, 0.234, 0.218,  0.007,               
Simple parsing: 4 Sort (x20)             , 5,  0.534, 0.516, 0.547, 0.516,  0.013,               
Square root: double                      , 5,  0.084, 0.078, 0.094, 0.078,  0.008,               
Square root: FPL16                       , 5,  1.875, 1.888, 1.888, 1.872,  0.007,               
Square root: uint32                      , 5,  0.344, 0.344, 0.344, 0.343,  0.001,               
Square root: uint64                      , 5,  0.680, 0.686, 0.687, 0.670,  0.009,               
Sudoku                                   , 5,  2.318, 2.324, 2.325, 2.308,  0.009,20x100 puzzles 
